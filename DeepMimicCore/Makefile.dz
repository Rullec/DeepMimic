BIN=Main
OBJ_DIR = objs
MKDIR = mkdir -p

# EIGEN_DIR = ../../libraries/eigen
# BULLET_INC_DIR = ../../libraries/bullet3/src
EIGEN_DIR = ../../eigen-3.3.7
BULLET_INC_DIR = ../../bullet3/src

# PYTHON_INC = /usr/include/python3.6m
# PYTHON_LIB = /usr/lib/ -lpython3.6m
PYTHON_INC = ../../../anaconda3/include/python3.7m
PYTHON_LIB = ../../../anaconda3/lib -lpython3.7m
export LD_LIBRARY_PATH=../../../anaconda3/lib:/home/darknight/anaconda3/lib:$LD_LIBRARY_PATH

INC = -I./ \
	-I$(EIGEN_DIR) \
	-I$(BULLET_INC_DIR)


# normal
LIBS = -lGLEW -lGL -lGLU -lglut -lBulletDynamics -lBulletCollision -lLinearMath -lm -lstdc++

# after
LIBS = -lGLEW -lGL -lGLU -lglut /home/darknight/Projects/bullet3/build_cmake/src/BulletDynamics/libBulletDynamics.so /home/darknight/Projects/bullet3/build_cmake/src/BulletCollision/libBulletCollision.so /home/darknight/Projects/bullet3/build_cmake/src/LinearMath/libLinearMath.so -lm -lstdc++

CC = clang++
# CC = g++
CFLAGS = -std=c++11 -O3 -Wall -fPIC 

SRC_DIRS = util/ \
	util/json/ \
	anim/ \
	sim/ \
	render/ \
	render/lodepng/ \
	scenes/ \
	scenes/arm/ \
	scenes/particle/ \
	scenes/pendulum/

SRC_FILES = $(BIN).cpp DeepMimicCore.cpp $(foreach dir, $(SRC_DIRS), $(wildcard $(dir)*.cpp))
OUT_DIRS = $(addprefix $(OBJ_DIR)/, $(SRC_DIRS))
OBJ = $(addprefix $(OBJ_DIR)/, $(patsubst %.cpp, %.o, $(SRC_FILES)))


default: build

build: $(BIN)

print:
	$(OUT_DIRS)

python: $(OUT_DIRS) $(OBJ)
	swig -c++ -python DeepMimicCore.i
	$(CC) -c -g $(CFLAGS) $(INC) $(LIBS) DeepMimicCore.cpp DeepMimicCore_wrap.cxx -I$(PYTHON_INC)
	$(CC) -shared $(CFLAGS) $(OBJ) $(LIBS) DeepMimicCore_wrap.o -o _DeepMimicCore.so -L$(PYTHON_LIB)

$(OBJ_DIR)/%.o: %.cpp
	$(CC) -c -g $(CFLAGS) $(INC) -o $@ $<

$(BIN): $(OUT_DIRS) $(OBJ)
	$(CC) -g $(CFLAGS) $(OBJ) $(LIBS) -o $@

$(OUT_DIRS):
	$(MKDIR) $(OUT_DIRS)
	
clean:
	- rm -f -r $(OUT_DIRS) $(BIN) $(OBJ) $(OBJ_DIR) DeepMimicCore_wrap.cxx _DeepMimicCore.so
